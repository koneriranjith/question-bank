{"file":"il-textarea.entry.esm.js","mappings":";;AAAA,MAAM,aAAa,GAAG,y8BAAy8B;;MCMl9B,UAAU;;;;;;;;;;;;;EAYb,kBAAkB,CAAC,KAAY;IACrC,IAAI,CAAC,KAAK,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;IACtD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACpC;EAEO,gBAAgB,CAAC,KAAY;IACnC,IAAI,CAAC,KAAK,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;IACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACjC;EAED,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,aAAa,IACtB,aACE,YAAM,KAAK,EAAC,OAAO,IAChB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,GAAG,YAAM,KAAK,EAAC,aAAa,QAAS,GAAG,IAAI,CACrD,EACN,IAAI,CAAC,OAAO,GAAG,kBAAY,OAAO,EAAE,IAAI,CAAC,OAAO,GAAe,GAAG,IAAI,CACrE,EACJ,8BACE,KAAK,EAAC,qBAAqB,EAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,EACvB,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,EACxC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IACvC,IAAI,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EAC7B,EACX,IAAI,CAAC,KAAK,GAAG,SAAG,KAAK,EAAC,UAAU,IAAE,IAAI,CAAC,KAAK,CAAK,GAAG,IAAI,CACrD,EACN;GACH;;;;;;","names":[],"sources":["src/components/il-textarea/il-textarea.scss?tag=il-textarea","src/components/il-textarea/il-textarea.tsx"],"sourcesContent":[".il-textarea {\n  margin-bottom: 1rem;\n  position: relative;\n  .label {\n    margin-bottom: 0.5rem;\n    display: inline-block;\n    font-weight: $fontWeight600;\n    font-size: $fontSize16;\n    text-transform: capitalize;\n  }\n  .il-textarea-control {\n    width: 100%;\n    display: block;\n    padding: 0.775rem 0.75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: $ilInputColor;\n    background-color: $background-color_white;\n    background-clip: padding-box;\n    border: 1px solid $ilInputBorderColor;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: 0.375rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    &.disabled,\n    &:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n      pointer-events: none;\n    }\n    &:focus-visible {\n      outline: 1px solid $ilInputOutlineColor;\n    }\n  }\n}\n","import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'il-textarea',\n  styleUrl: 'il-textarea.scss',\n})\nexport class IlTextarea {\n  @Prop({ reflect: true, mutable: true }) label: string;\n  @Prop({ reflect: true, mutable: true }) value: string;\n  @Prop() error: string | undefined;\n  @Prop() required: Boolean;\n  @Prop() readOnly: boolean;\n  @Prop() placeholder: string;\n  @Prop() tooltip: String;\n\n  @Event() valueChanged: EventEmitter<string>;\n  @Event() valueBlur: EventEmitter<string>;\n\n  private onInputChangeValue(event: Event) {\n    this.value = (event.target as HTMLInputElement).value;\n    this.valueChanged.emit(this.value);\n  }\n\n  private onInputBlurValue(event: Event) {\n    this.value = (event.target as HTMLInputElement).value;\n    this.valueBlur.emit(this.value);\n  }\n\n  render() {\n    return (\n      <div class=\"il-textarea\">\n        <p>\n          <span class=\"label\">\n            {this.label}\n            {this.required ? <span class=\"il-required\">*</span> : null}\n          </span>\n          {this.tooltip ? <il-tooltip tooltip={this.tooltip}></il-tooltip> : null}\n        </p>\n        <textarea\n          class=\"il-textarea-control\"\n          value={this.value || ''}\n          placeholder={this.placeholder}\n          onBlur={this.onInputBlurValue.bind(this)}\n          onInput={this.onInputChangeValue.bind(this)}\n          {...this.readOnly && { disabled: true }}\n        ></textarea>\n        {this.error ? <p class=\"il-error\">{this.error}</p> : null}\n      </div>\n    );\n  }\n}\n"],"version":3}