{"file":"question-bank.entry.esm.js","mappings":"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","names":[],"sources":["src/components/question-bank/question-bank.scss?tag=question-bank","src/components/question-bank/question-bank.tsx"],"sourcesContent":[".question-bank {\n  font-family: 'Karla', sans-serif;\n  .il-error,\n  .il-required {\n    color: $required-color;\n  }\n  .label {\n    margin-bottom: 0.5rem;\n    display: inline-block;\n    font-weight: $fontWeight600;\n    font-size: $fontSize16;\n    text-transform: capitalize;\n  }\n  .il-required {\n    padding-right: 7px;\n    padding-left: 4px;\n  }\n  position: relative;\n  padding: 40px 0;\n  background-color: $mainBackgroundColor;\n  .question-bank_container {\n    width: 100%;\n    padding-right: 15px;\n    padding-left: 15px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  @media (min-width: $minWidth576) {\n    .question-bank_container {\n      max-width: 540px;\n    }\n  }\n  @media (max-width: 992px) {\n    .question-bank-form_tabs {\n      flex-direction: column;\n      border-radius: 10px;\n      .qb_nav-link,\n      .qb_active {\n        margin-bottom: 5px;\n      }\n    }\n    .il-tooltip-info {\n      margin-bottom: 20px;\n    }\n  }\n  @media (min-width: $minWidth768) {\n    .questiion-bank_container {\n      max-width: 720px;\n    }\n  }\n  @media (min-width: $minWidth992) {\n    .question-bank_container {\n      max-width: 960px;\n    }\n  }\n\n  @media (min-width: $minWidth1200) {\n    .question-bank_container {\n      max-width: 1200px;\n    }\n  }\n  @media (min-width: $minWidth1400) {\n    .question-bank_container {\n      max-width: 1320px;\n    }\n  }\n\n  .question-bank-form_tabs {\n    border-radius: 50px;\n    background-color: $background-color_white;\n    padding: 11px 16px;\n    display: flex;\n    margin-bottom: 0;\n    list-style: none;\n    border: 3px solid $mainDropBorderColor;\n    justify-content: space-between;\n    align-items: center;\n    column-gap: 10px;\n    .qb_nav-link {\n      border-radius: 35px;\n      width: 100%;\n      height: 50px;\n      font-weight: 600;\n      font-size: 15px;\n      transition: 0.5s all ease;\n      text-transform: capitalize;\n      color: $navTextColor;\n      border: solid 2px transparent;\n      background-color: $navBackgroundColor;\n      padding: 0 3px;\n      display: inline-block;\n    }\n    .qb_active {\n      background-color: $appPrimaryColor;\n      border-radius: 35px;\n      width: 100%;\n      height: 50px;\n      font-weight: 800;\n      font-size: 15px;\n      transition: 0.5s all ease;\n      text-transform: capitalize;\n      color: $background-color_white;\n      border: solid 2px transparent;\n      padding: 0 3px;\n      display: inline-block;\n    }\n  }\n  .question-bank_wrapper {\n    background: $background-color_white;\n    border-radius: 10px;\n    border-top: 7px solid $appPrimaryColor;\n    box-shadow: 0 0 40px 5px $boxShadowColor;\n    margin-top: 2rem;\n    padding: 2rem;\n    .question-field {\n      padding-right: 15px;\n      padding-left: 15px;\n    }\n    .child-question {\n      padding-left: 20px;\n\n    }\n    .hydrated {\n      margin-bottom: 1.2rem;\n      .row {\n        display: -ms-flexbox;\n        display: flex;\n        -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n        margin-right: -15px;\n        margin-left: -15px;\n      }\n    }\n  }\n\n  .il-button-wrapper {\n    .il-btn-primary {\n      background-color: $appPrimaryColor;\n      font-size: 17px;\n      color: $background-color_white;\n      font-weight: bold;\n      border-radius: 8px;\n      transition: 0.5s all ease;\n      text-transform: uppercase;\n      position: relative;\n      overflow: hidden;\n      display: inline-block;\n      height: 52px;\n      border: none;\n      margin-top: 30px;\n      padding: 0px 50px;\n    }\n    .il-btn-secondary {\n      background-color: $appSecondaryColor;\n      font-size: 17px;\n      color: $background-color_white;\n      font-weight: bold;\n      border-radius: 8px;\n      transition: 0.5s all ease;\n      text-transform: uppercase;\n      position: relative;\n      overflow: hidden;\n      display: inline-block;\n      height: 52px;\n      border: none;\n      margin-top: 30px;\n      padding: 0px 50px;\n      margin-right: 13px;\n    }\n  }\n}\n","import { Component, h, Prop, State, Watch, Method, Fragment } from '@stencil/core';\nimport { arrayToString, stringToArray } from '../../utils/utils';\n\n@Component({\n  tag: 'question-bank',\n  styleUrl: 'question-bank.scss',\n})\nexport class QuestionBank {\n  // component base class name 'question-bank'\n  private baseClassName = 'question-bank';\n  private blurUpdateAnswerType = ['shorttext', 'longtext', 'email', 'number', 'phonenumber', 'password'];\n  // props\n  @Prop() client: string;\n  @Prop() apiBaseUrl: string;\n  @Prop() applicationId: string;\n  @Prop() carrierAuthorization: string;\n  @Prop() userId: string;\n  @Prop() formId: string;\n  @Prop() singleForm: boolean;\n  @Prop() isFormValidation: boolean;\n\n  // state\n  @State() isErrorInRequiredMessage: string;\n  @State() questions: any[] = [];\n  @State() error: string;\n  @State() isStepForm: Boolean;\n  @State() stepFormId: number;\n  @State() formData: any = {};\n  @State() formErrorMessage: any = {};\n  @State() isLoading: boolean;\n\n  // watch stepFormId for update the Form Data values\n  @Watch('stepFormId')\n  watchPropHandler(newValue: number, oldValue: number) {\n    if (newValue && this.questions.length) {\n      this.setFormData(newValue, this.questions);\n    }\n    console.log('oldValue', oldValue);\n  }\n\n  setnLevelFormData(acc, val) {\n    if (this.formData[val.questionId] || val.answer) {\n      acc = { ...acc, [val.questionId]: this.formData[val.questionId] || val.answer };\n    }\n    if (val.childAnswerNew && val.childAnswerNew.length) {\n      val.childAnswerNew.forEach(innerval => {\n        acc = this.setnLevelFormData(acc, innerval);\n      });\n    }\n    return acc;\n  }\n  // update the form data values based on selected stepForm\n  setFormData(stepFormId: number, questions: any) {\n    let selectedQuestions = [];\n    if (stepFormId) {\n      selectedQuestions = questions.find((val: any) => val.sectionId == stepFormId).questionsResponse;\n    } else {\n      selectedQuestions = questions;\n    }\n    const formData = selectedQuestions.reduce((acc, val) => {\n      return this.setnLevelFormData(acc, val);\n    }, {});\n    this.formData = { ...this.formData, ...formData };\n  }\n\n  // lifecycle hook componentDid called after render\n  async componentDidLoad() {\n    const { apiBaseUrl, applicationId, userId, formId } = this;\n    this.isLoading = true;\n    // required props validating before calling api\n    if (!this.isErrorInRequiredMessage) {\n      const reqPayload = {\n        applicationId: applicationId,\n        userId: userId,\n      };\n\n      try {\n        // api call\n        const rawResponse = await fetch(`${apiBaseUrl}/getAllQuestionDetailsByformId?formId=${formId}`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Carrierauthorization': this.carrierAuthorization || '',\n          },\n          body: JSON.stringify(reqPayload),\n        });\n        const content = await rawResponse.json();\n        if (content.status.code === 200) {\n          let data = [];\n          // single form render or step form render condition check based on (singleForm props)\n          if (this.singleForm) {\n            data = content.data.reduce((acc, item) => {\n              acc = [...acc, ...item.questionsResponse];\n              return acc;\n            }, []);\n          } else {\n            data = content.data;\n          }\n          this.isStepForm = !!data[0].sectionName;\n          if (this.isStepForm) {\n            this.stepFormId = data[0].sectionId;\n          }\n          this.setFormData(this.stepFormId, data);\n\n          this.questions = data;\n        } else {\n          this.error = 'Something went wrong!';\n        }\n        this.isLoading = false;\n      } catch (error) {\n        console.log('error', error);\n        this.isLoading = false;\n        this.error = 'Something went wrong!';\n      }\n    }\n  }\n  // componentWillLoad is lifecycle call before render method\n  componentWillLoad() {\n    const { apiBaseUrl, applicationId, userId, formId, client, carrierAuthorization } = this;\n    // validating required props for this component\n    if (!client) {\n      this.isErrorInRequiredMessage = 'client';\n    }\n    if (!apiBaseUrl) {\n      this.isErrorInRequiredMessage = `${this.isErrorInRequiredMessage ? ',' : ''} apiBaseUrl`;\n    }\n    if (!applicationId) {\n      this.isErrorInRequiredMessage = `${this.isErrorInRequiredMessage ? ',' : ''} applicationId`;\n    }\n    if (!userId) {\n      this.isErrorInRequiredMessage = `${this.isErrorInRequiredMessage ? ',' : ''} userId`;\n    }\n    if (!formId) {\n      this.isErrorInRequiredMessage = `${this.isErrorInRequiredMessage ? ',' : ''} formId`;\n    }\n    if (!carrierAuthorization) {\n      this.isErrorInRequiredMessage = `${this.isErrorInRequiredMessage ? ',' : ''} carrierAuthorization`;\n    }\n\n    this.isErrorInRequiredMessage = this.isErrorInRequiredMessage ? `Valid Props are required: ${this.isErrorInRequiredMessage} for this component ${client}` : '';\n  }\n\n  selectSection(id) {\n    if (this.stepFormId !== id) {\n      this.stepFormId = id;\n    }\n  }\n\n  selectStepForm(id, index) {\n    const stepFormIndex = this.questions.findIndex(val => this.stepFormId == val.sectionId);\n    if (this.isFormValidation && stepFormIndex < index) {\n      return;\n    }\n    this.selectSection(id);\n  }\n\n  @Method()\n  async storeAnswerInQuestion(payload) {\n    const { apiBaseUrl, applicationId } = this;\n    const reqPayload = {\n      applicationUserAnswerRequest: payload,\n    };\n    try {\n      const rawResponse = await fetch(`${apiBaseUrl}/storeAnswerInQuestion?applicationid=${applicationId}`, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Carrierauthorization': this.carrierAuthorization || '',\n        },\n        body: JSON.stringify(reqPayload),\n      });\n      const content = await rawResponse.json();\n      return content.data;\n    } catch (error) {\n      console.log('error', error);\n    }\n    return 42;\n  }\n\n  private timeoutId: NodeJS.Timeout | undefined;\n\n  // every question field on change debounce Method will be called, check for child addQuestion or removeQuestion\n  @Method()\n  async debouncedMethod(payload: any) {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n    this.timeoutId = setTimeout(async () => {\n      const data = await this.storeAnswerInQuestion(payload);\n      // updated the child Question based on answer\n      this.updateChildQuestions(data);\n    }, 30);\n  }\n\n  setChildQuestionsData(childAnswerNew, addCheckList, removeCheckList, val, addList, removeList) {\n    if (addCheckList.includes(val.questionId)) {\n      childAnswerNew = addList[val?.questionId];\n    }\n    if (removeCheckList.includes(val.questionId)) {\n      childAnswerNew = childAnswerNew.filter(chiVal => {\n        if (!removeList[val.questionId].includes(chiVal.questionId)) {\n          return chiVal;\n        }\n      });\n    }\n\n    return childAnswerNew;\n  }\n\n  getnLevelChildQuestions(val, addCheckList, removeCheckList, addList, removeList) {\n    let childAnswerNew = val['childAnswerNew'];\n    if (addCheckList.includes(val.questionId) || removeCheckList.includes(val.questionId)) {\n      childAnswerNew = this.setChildQuestionsData(childAnswerNew, addCheckList, removeCheckList, val, addList, removeList);\n    } else {\n      if (val?.childAnswerNew?.length > 0) {\n        childAnswerNew = val?.childAnswerNew?.map(item => {\n          return this.getnLevelChildQuestions(item, addCheckList, removeCheckList, addList, removeList);\n        });\n      }\n    }\n    return { ...val, childAnswerNew: childAnswerNew };\n  }\n  // mutating the question state with the child question data\n  getUpdatedChildQuestionData(addList, removeList) {\n    const addCheckList = addList && Object.keys(addList).length ? Object.keys(addList).map(val => Number(val)) : [];\n    const removeCheckList = removeList && Object.keys(removeList).length ? Object.keys(removeList).map(val => Number(val)) : [];\n    const [selectedQuestions, stepFormIndex]: any = this.getSelectedQuestions();\n\n    if (this.isStepForm) {\n      const questionsResponse = selectedQuestions.map(val => {\n        return this.getnLevelChildQuestions(val, addCheckList, removeCheckList, addList, removeList);\n      });\n      return this.questions.map((val, index) => {\n        if (index == stepFormIndex) {\n          return { ...val, questionsResponse };\n        }\n        return val;\n      });\n    } else {\n      return selectedQuestions.map(val => {\n        return this.getnLevelChildQuestions(val, addCheckList, removeCheckList, addList, removeList);\n      });\n    }\n  }\n\n  // updating the child question data\n  updateChildQuestions({ addList, removeList }) {\n    this.questions = [...this.getUpdatedChildQuestionData(addList, removeList)];\n  }\n\n  handleChange(detail, question) {\n    delete this.formErrorMessage?.[question.questionId];\n    this.formData = { ...this.formData, [question.questionId]: detail || '' };\n    if (question.mstAnswerType === 'beneficiary') {\n      const payload = [\n        {\n          questionId: question.questionId,\n          answerValue: null,\n          customQuestionList: detail.data,\n          totalCustomQuestionCount: detail.count,\n        },\n      ];\n      this.debouncedMethod(payload);\n    } else {\n      if (!this.blurUpdateAnswerType?.includes(question?.mstAnswerType)) {\n        this.debouncedMethod([{ questionId: question.questionId, answerValue: detail }]);\n      }\n    }\n  }\n\n  validateEmail(email) {\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return emailPattern.test(email);\n  }\n\n  validatePhoneNumber(phoneNumber) {\n    // Regular expression for a valid phone number (supports various formats)\n    const phoneRegex = /^(\\+?(\\d{1,2})?[-. ]?)?(\\(?\\d{3}\\)?[-. ]?)?(\\d{3}[-. ]?\\d{4})$/;\n\n    // Test the phoneNumber against the regular expression\n    return phoneRegex.test(phoneNumber);\n  }\n\n  renderField(question) {\n    switch (question.mstAnswerType) {\n      case 'shorttext':\n        return (\n          <il-input\n            type={'text'}\n            questionType={question.mstAnswerType}\n            label={question.text}\n            mask={question.mask}\n            readOnly={question?.readOnly ?? false}\n            value={this.formData[question.questionId] || ''}\n            error={this.formErrorMessage[question.questionId]}\n            required={question.required}\n            placeholder={question.hintText}\n            tooltip={question.informationText || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            onValueBlur={ev => {\n              this.handleBlur(ev.detail, question);\n            }}\n          ></il-input>\n        );\n      case 'longtext':\n        return (\n          <il-textarea\n            error={this.formErrorMessage[question.questionId]}\n            label={question.text}\n            required={question.required}\n            tooltip={question.informationText || ''}\n            readOnly={question?.readOnly ?? false}\n            placeholder={question.hintText}\n            value={this.formData[question.questionId] || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            onValueBlur={ev => {\n              this.handleBlur(ev.detail, question);\n            }}\n          ></il-textarea>\n        );\n      case 'address':\n        return (\n          <il-address\n            api-base-url={this.apiBaseUrl}\n            error={this.formErrorMessage[question.questionId]}\n            required={question.required}\n            label={question.text}\n            readOnly={question.readOnly || false}\n            placeholder={question.hintText ? JSON.parse(question.hintText) : {}}\n            carrier-authorization={this.carrierAuthorization}\n            value={this.formData[question.questionId] ? JSON.parse(this.formData[question.questionId]) : {}}\n            tooltip={question.informationText || ''}\n            onValueChanged={ev => this.handleChange(JSON.stringify(ev.detail), question)}\n            onValueBlur={ev => {\n              this.handleBlur(ev.detail, question);\n            }}\n          ></il-address>\n        );\n      case 'email':\n        return (\n          <il-input\n            type={'text'}\n            questionType={question.mstAnswerType}\n            error={this.formErrorMessage[question.questionId]}\n            label={question.text}\n            tooltip={question.informationText || ''}\n            readOnly={question?.readOnly ?? false}\n            required={question.required}\n            placeholder={question.hintText}\n            value={this.formData[question.questionId] || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            onValueBlur={ev => {\n              this.handleBlur(ev.detail, question);\n            }}\n          ></il-input>\n        );\n      case 'number':\n        return (\n          <il-input\n            type={'text'}\n            questionType={question.mstAnswerType}\n            mask={question.mask}\n            error={this.formErrorMessage[question.questionId]}\n            readOnly={question?.readOnly ?? false}\n            label={question.text}\n            tooltip={question.informationText || ''}\n            required={question.required}\n            placeholder={question.hintText}\n            value={this.formData[question.questionId] || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            onValueBlur={ev => {\n              this.handleBlur(ev.detail, question);\n            }}\n          ></il-input>\n        );\n      case 'phonenumber':\n        return (\n          <il-input\n            type={'text'}\n            questionType={question.mstAnswerType}\n            mask={question.mask}\n            error={this.formErrorMessage[question.questionId]}\n            readOnly={question?.readOnly ?? false}\n            label={question.text}\n            tooltip={question.informationText || ''}\n            required={question.required}\n            placeholder={question.hintText}\n            value={this.formData[question.questionId] || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            onValueBlur={ev => {\n              this.handleBlur(ev.detail, question);\n            }}\n          ></il-input>\n        );\n\n      case 'Date':\n        return (\n          <il-datepicker\n            error={this.formErrorMessage?.[question?.questionId] ?? ''}\n            label={question.text}\n            readOnly={question?.readOnly ?? false}\n            tooltip={question.informationText || ''}\n            required={question.required}\n            placeholder={question.hintText}\n            dateFormat={question.dateFormat || 'MM/DD/YYYY'}\n            value={this.formData?.[question?.questionId] || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            /*  onValueBlur={ev => {\n             this.handleBlur(format(new Date(ev.detail), question.dateFormat), question);\n           }} */\n          ></il-datepicker>\n        );\n      case 'multichoice':\n        return (\n          <il-multi-choice\n            label={question.text}\n            tooltip={question.informationText || ''}\n            error={this.formErrorMessage[question.questionId]}\n            required={question.required}\n            readOnly={question?.readOnly ?? false}\n            isDefault={question.answerResponse.filter(val => val.isDefault)?.[0]}\n            options={question.answerResponse.map(val => ({ label: val.answerLabel, value: val.answerId }))}\n            onValueChanged={ev => this.handleChange(arrayToString(ev.detail), question)}\n            selectedValue={stringToArray(this.formData[question.questionId]) || []}\n          ></il-multi-choice>\n        );\n\n      case 'notes':\n        return (\n          <il-notes\n            label={question.text}\n            checkboxText={question.checkboxText}\n            isShowCheckbox={question.isShowCheckbox}\n            notes={question.notes}\n            readOnly={question.readOnly || false}\n            tooltip={question.informationText || ''}\n            error={this.formErrorMessage[question.questionId]}\n            required={question.required}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            selectedValue={this.formData[question.questionId]}\n          ></il-notes>\n        );\n\n      // case 'multichoice':\n      //   return (\n      //     <my-multi-select\n      //       label={question.text}\n      //       tooltip={question.informationText || ''}\n      //       error={this.formErrorMessage[question.questionId]}\n      //       required={this.formErrorMessage[question.required]}\n      //       options={question.answerResponse.map(val => ({ label: val.answerLabel, value: val.answerId }))}\n      //       values={this.stringToArray(this.formData[question.questionId])}\n      //       placeholder=\"Select options\"\n      //       onValuesChanged={ev => this.handleChange(this.arrayToString(ev.detail), question)}\n      //     ></my-multi-select>\n      //   );\n      case 'Dropdown':\n        return (\n          <il-dropdown\n            label={question.text}\n            tooltip={question.informationText || ''}\n            required={question.required}\n            error={this.formErrorMessage[question.questionId]}\n            readOnly={question.readOnly || false}\n            isDefault={question.answerResponse.filter(val => val.isDefault)?.[0]}\n            options={question.answerResponse.map(val => ({ label: val.answerLabel, value: val.answerId }))}\n            value={this.formData[question.questionId]}\n            placeholder={question.hintText || 'Select an option'}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n          ></il-dropdown>\n        );\n\n      case 'Radio':\n        return (\n          <il-radio-button\n            label={question.text}\n            tooltip={question.informationText || ''}\n            required={question.required}\n            readOnly={question.readOnly || false}\n            isDefault={question.answerResponse.filter(val => val.isDefault)?.[0]}\n            error={this.formErrorMessage[question.questionId]}\n            options={question.answerResponse.map(val => ({ label: val.answerLabel, value: val.answerId }))}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            selectedValue={this.formData[question.questionId] || []}\n          ></il-radio-button>\n        );\n      case 'files':\n        return (\n          <il-file-loader\n            fileResponseList={question.fileResponseList}\n            label={question.text}\n            required={question.required}\n            readOnly={question.readOnly || false}\n            error={this.formErrorMessage[question.questionId]}\n            tooltip={question.informationText || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            selectedValue={this.formData[question.questionId]}\n            checkboxText={question.checkboxText}\n            isShowCheckbox={question.isShowCheckbox}\n          ></il-file-loader>\n        );\n      case 'password':\n        return (\n          <il-input\n            type={'password'}\n            questionType={question.mstAnswerType}\n            label={question.text}\n            value={this.formData[question.questionId] || ''}\n            error={this.formErrorMessage[question.questionId]}\n            readOnly={question?.readOnly ?? false}\n            mask={question.mask}\n            required={question.required}\n            placeholder={question.hintText}\n            tooltip={question.informationText || ''}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n            onValueBlur={ev => {\n              this.handleBlur(ev.detail, question);\n            }}\n          ></il-input>\n        );\n      case 'beneficiary':\n        return (\n          <il-beneficiary\n            label={question.text}\n            value={this.formData[question.questionId] || ''}\n            error={this.formErrorMessage[question.questionId]}\n            required={question.required}\n            tooltip={question.informationText || ''}\n            customColumns={question.customColumns || []}\n            questionId={question.questionId}\n            onBeneficiaryValueChanged={ev => this.handleChange(ev.detail, question)}\n            onBeneficiaryValueBlur={ev => this.handleBlur(ev.detail, question)}\n            blurUpdateAnswerType={this.blurUpdateAnswerType}\n            maxLength={question?.maxLength}\n            minLength={question?.minLength}\n          ></il-beneficiary>\n        );\n      case 'combobox':\n        return (\n          <il-combobox\n            label={question.text}\n            tooltip={question.informationText || ''}\n            required={question.required}\n            error={this.formErrorMessage[question.questionId]}\n            readOnly={question.readOnly || false}\n            isDefault={question.answerResponse.filter(val => val.isDefault)?.[0]}\n            options={question.answerResponse.map(val => ({ label: val.answerLabel, value: val.answerId, id: 'old' }))}\n            value={this.formData[question.questionId]}\n            placeholder={question.hintText || 'Select an option'}\n            onValueChanged={ev => this.handleChange(ev.detail, question)}\n          />\n        );\n      default:\n        return <p>--- not implemented yet --- {question.mstAnswerType}</p>;\n    }\n  }\n\n  formValidation(val) {\n    if (val.required && !this.formData[val.questionId]) {\n      return val.errorMessage || \"It's required field\";\n    } else if (val.mask && this.formData[val.questionId].length != val.mask.length) {\n      return val.errorMessage || 'Incorrect mask format';\n    } else if (val.minLength && this.formData[val.questionId].length < val.minLength) {\n      return `Min length should be ${val.minLength}`;\n    } else if (val.maxLength && this.formData[val.questionId].length > val.maxLength) {\n      return `Max length should be ${val.maxLength}`;\n    } else if (val.regexPattern && !RegExp(val.regexPattern).test(this.formData[val.questionId])) {\n      return val.errorMessage || `Should be Valid format`;\n    }\n    // else if (val.mstAnswerType == 'email' && this.formData[val.questionId] && !this.validateEmail(this.formData[val.questionId] || '')) {\n    //   return `Invalid email`;\n    // }\n    else if (val.mstAnswerType == 'phonenumber' && this.formData[val.questionId] && !this.validatePhoneNumber(this.formData[val.questionId] || '')) {\n      return `Invalid Phone Number`;\n    }\n    if (val.mstAnswerType == 'address' && val.required) {\n      const data = this.formData[val.questionId] ? JSON.parse(this.formData[val.questionId]) : {};\n      if (!data.description) {\n        return val.errorMessage || \"It's required field\";\n      }\n    }\n  }\n\n  handleBlur(detail, question) {\n    const errorMessage = this.formValidation(question);\n    if (!errorMessage) {\n      if (this.blurUpdateAnswerType.includes(question.mstAnswerType)) {\n        this.debouncedMethod([{ questionId: question.questionId, answerValue: detail }]);\n      } else {\n        if (question.mstAnswerType === 'beneficiary') {\n          const payload = [\n            {\n              questionId: question.questionId,\n              answerValue: null,\n              customQuestionList: detail.data,\n              totalCustomQuestionCount: detail.count,\n            },\n          ];\n          this.debouncedMethod(payload);\n        }\n      }\n    }\n\n    if (errorMessage) {\n      this.formErrorMessage = { ...this.formErrorMessage, [question.questionId]: errorMessage };\n    }\n  }\n\n  // checking form validation\n  isFormValid() {\n    const results: any = this.getSelectedQuestions();\n    const selectedQuestions = results[0];\n    let isValid = true;\n    let error = {};\n    selectedQuestions.forEach(val => {\n      const childAnswerNew = val.childAnswerNew && val.childAnswerNew.length ? val.childAnswerNew : [];\n      let errorMessage = this.formValidation(val);\n      if (errorMessage) {\n        error = { ...error, [val.questionId]: errorMessage };\n        isValid = false;\n      }\n      if (childAnswerNew.length) {\n        childAnswerNew.forEach(childVal => {\n          let childErrorMessage = this.formValidation(childVal);\n\n          if (childErrorMessage) {\n            error = { ...error, [childVal.questionId]: childErrorMessage };\n            isValid = false;\n          }\n        });\n      }\n    });\n    this.formErrorMessage = error;\n    return isValid;\n  }\n\n  // submit form function with validation based on props (isFormValidation is true)\n  handleSubmit(isStepForm, index) {\n    if (this.isFormValidation) {\n      const valid = this.isFormValid();\n      if (!valid) {\n        alert('required fields are empty !');\n        return;\n      }\n    }\n\n    let lastIndex = this.questions.length - 1;\n    if (isStepForm && index != lastIndex) {\n      let val = this.questions[++index];\n      this.selectSection(val.sectionId);\n      // console.log('we can submit the form', this.formData);\n    } else {\n      // console.log('we can submit the form', this.formData);\n    }\n  }\n\n  // previous button action\n  handlePrevious(index) {\n    let val = this.questions[--index];\n    this.selectSection(val.sectionId);\n  }\n\n  renderSubmitButton(index) {\n    if (this.isLoading) {\n      return null;\n    }\n    if (this.isStepForm) {\n      //  if step form we are rendering button group based on index\n      let lastIndex = this.questions.length - 1;\n      if (index == 0) {\n        return (\n          <div class=\"il-button-wrapper\">\n            <button class=\"il-btn-primary\" onClick={() => this.handleSubmit(this.isStepForm, index)}>\n              Next\n            </button>\n          </div>\n        );\n      }\n      return (\n        <div class=\"il-button-wrapper\">\n          <button class=\"il-btn-secondary\" onClick={() => this.handlePrevious(index)}>\n            Previous\n          </button>\n          <button class=\"il-btn-primary\" onClick={() => this.handleSubmit(this.isStepForm, index)}>\n            {index != lastIndex ? 'Next' : 'Submit'}\n          </button>\n        </div>\n      );\n    } else {\n      // single form we are rendering button\n      return (\n        <div class=\"il-button-wrapper\">\n          <button class=\"il-btn-primary\" onClick={() => this.handleSubmit(this.isStepForm, index)}>\n            Submit\n          </button>\n        </div>\n      );\n    }\n  }\n  // returns the selected step form questions with step index\n  private getSelectedQuestions() {\n    let selectedQuestions: any = [];\n    let stepFormIndex: number | undefined;\n    if (this.isStepForm && this.stepFormId) {\n      stepFormIndex = this.questions.findIndex(val => val.sectionId == this.stepFormId);\n      selectedQuestions = this.questions.find(val => val.sectionId == this.stepFormId).questionsResponse;\n    } else {\n      selectedQuestions = this.questions;\n    }\n    return [selectedQuestions, stepFormIndex];\n  }\n\n  // child question render function\n  private renderChildQuestions(childAnswerNew) {\n    if (childAnswerNew && childAnswerNew.length) {\n      return childAnswerNew.map(val => (\n        <div class=\"child-question\">\n          <div class={`question-field question-field-${val.questionId}`}>{this.renderField(val)}</div>\n          {this.renderChildQuestions(val.childAnswerNew)}\n        </div>\n      ));\n    }\n    return null;\n  }\n\n  // questions render function\n  private renderQuestions() {\n    if (this.error) {\n      return <p>{this.error}</p>;\n    }\n    const [selectedQuestions, stepFormIndex]: any = this.getSelectedQuestions();\n    return (\n      <div class={`${this.baseClassName}_container`}>\n        <div class={`${this.baseClassName}_section`}>\n          {this.questions.length && this.isStepForm ? (\n            <div class={this.baseClassName + '-form_tabs '}>\n              {this.questions.map((val, index) => {\n                if (val.sectionName) {\n                  return (\n                    <button class={this.stepFormId == val.sectionId ? 'qb_active' : 'qb_nav-link'} onClick={() => this.selectStepForm(val.sectionId, index)}>\n                      {val.sectionName}\n                    </button>\n                  );\n                }\n              })}\n            </div>\n          ) : null}\n          <div class={`${this.baseClassName}_wrapper`}>\n            {selectedQuestions.length\n              ? selectedQuestions.map(val => {\n                  return (\n                    <Fragment>\n                      <div class={`question-field question-field-${val.questionId}`}> {this.renderField(val)}</div>\n                      {this.renderChildQuestions(val.childAnswerNew)}\n                    </Fragment>\n                  );\n                })\n              : 'loading!'}\n          </div>\n        </div>\n        {this.renderSubmitButton(stepFormIndex)}\n      </div>\n    );\n  }\n\n  render() {\n    const { baseClassName, client, isErrorInRequiredMessage } = this;\n    return <div class={`${baseClassName} ${baseClassName}--${client}`}>{isErrorInRequiredMessage ? <p>{isErrorInRequiredMessage}</p> : this.renderQuestions()}</div>;\n  }\n}\n"],"version":3}