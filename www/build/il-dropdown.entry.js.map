{"file":"il-dropdown.entry.esm.js","mappings":";;AAAA,MAAM,aAAa,GAAG,qhEAAqhE;;MCW9hE,UAAU;;;;mBAC4B,EAAE;;;;;;;;;kBASjC,KAAK;;;EAIvB,MAAM,gBAAgB;;IACpB,IAAG,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;MAChC,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,MAAA,IAAI,CAAC,SAAS,0CAAG,aAAa,CAAC,EAAE,KAAK,EAAE,MAAA,IAAI,CAAC,SAAS,0CAAG,UAAU,CAAC,EAAE,CAAC,CAAA;KACnG;GACF;;EAGD,kBAAkB,CAAC,KAAiB;IAClC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC,EAAE;MAChE,OAAO;KACR;IACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;GACrB;EAED,YAAY,CAAC,MAAc;IACzB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;GACrB;EAED,cAAc;IACZ,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;GAC5B;EAED,aAAa;IACX,MAAM,YAAY,GAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACxF,IAAI,IAAI,CAAC,MAAM,EAAE;MACf,QACE,UAAI,KAAK,EAAC,cAAc,IACrB,IAAI,CAAC,OAAO,CAAC,MAAM;UAChB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,KACvB,UAAI,KAAK,EAAE,GAAG,YAAY,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,GAAG,UAAU,GAAG,QAAQ,EAAE,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IACjH,MAAM,CAAC,KAAK,CACV,CACN,CAAC;UACA,IAAI,CACL,EACL;KACH;IAED,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;MACxB,QACE,UAAI,KAAK,EAAC,cAAc,IACtB,UAAI,KAAK,EAAC,QAAQ,wBAAuB,CACtC,EACL;KACH;GACF;EAED,MAAM;IACJ,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7E,QACE,WAAK,KAAK,EAAC,WAAW,EAAC,GAAG,EAAE,EAAE,KAAK,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IACpD,aACE,YAAM,KAAK,EAAC,OAAO,IAChB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,GAAG,YAAM,KAAK,EAAC,aAAa,QAAS,GAAG,IAAI,CACrD,EACN,IAAI,CAAC,OAAO,GAAG,kBAAY,OAAO,EAAE,IAAI,CAAC,OAAO,GAAe,GAAG,IAAI,CACrE,EAEF,IAAI,CAAC,QAAQ;MACX,2BACE,KAAK,EAAC,YAAY,EAClB,IAAI,EAAC,MAAM,EACX,KAAK,EAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,KAAI,EAAE,IAE7B,IAAI,CAAC,QAAQ,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,EACvC;MACF,WAAK,KAAK,EAAC,gBAAgB,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,IAC9D,WAAK,KAAK,EAAC,iBAAiB,IAAE,IAAI,CAAC,KAAK,GAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,KAAI,IAAI,CAAC,WAAW,GAAG,YAAM,KAAK,EAAC,aAAa,IAAE,IAAI,CAAC,WAAW,IAAI,eAAe,CAAQ,CAAO,EAClK,WAAK,KAAK,EAAC,aAAa,IAAE,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAO,CACpD,EACT,IAAI,CAAC,aAAa,EAAE,EACpB,IAAI,CAAC,KAAK,GAAG,SAAG,KAAK,EAAC,UAAU,IAAE,IAAI,CAAC,KAAK,CAAK,GAAG,IAAI,CACrD,EACN;GACH;;;;;;","names":[],"sources":["src/components/il-dropdown/il-dropdown.scss?tag=il-dropdown","src/components/il-dropdown/il-dropdown.tsx"],"sourcesContent":[".il-select {\n  margin-bottom: 1rem;\n  position: relative;\n  .select-label {\n    margin-bottom: 10px;\n    font-size: $fontSize16;\n    font-weight: $fontWeight600;\n    text-transform: capitalize;\n    display: inline-block;\n  }\n  .il-control {\n    width: 100%;\n    display: block;\n    padding: 0.775rem 0.75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: $ilInputColor;\n    background-color: $background-color_white;\n    background-clip: padding-box;\n    border: 1px solid $ilInputBorderColor;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: 0.375rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    &:focus-visible {\n      outline: 1px solid $ilInputOutlineColor;\n    }\n    &.disabled,\n    &:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n      pointer-events: none;\n    }\n  }\n  \n  .select-trigger {\n    position: relative;\n    width: 100%;\n    max-height: 50px;\n    display: block;\n    padding: 0.775rem 0.75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: $ilInputColor;\n    background-color: $background-color_white;\n    background-clip: padding-box;\n    border: 1px solid $ilInputBorderColor;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: 0.375rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    .select-icon {\n      position: absolute;\n      content: '';\n      top: 13px;\n      right: 13px;\n      color: $selectDropIconColor;\n      font-size: 14px;\n      vertical-align: middle;\n      display: inline-block;\n    }\n  }\n  .select-items {\n    background-color: $background-color_white;\n    border-radius: 0.375rem;\n    list-style: none;\n    position: absolute;\n    width: 100%;\n    z-index: 99;\n    box-shadow: 0 0 40px 5px rgba(0, 0, 0, 0.1);\n    padding: 7px 0px 7px 0px;\n    overflow-y: scroll;\n    max-height: 200px;\n    border: 1px solid $ilInputBorderColor;\n    margin-top: 5px;\n    .option {\n      color: $background-color_black;\n      padding: 11px 16px;\n      cursor: pointer;\n      user-select: none;\n      font-size: $fontSize16;\n      &:hover {\n        background-color: $mainBackgroundColor;\n      }\n    }\n    .selected {\n      background-color: $selectActiveColor;\n      color: $background-color_black;\n      padding: 11px 16px;\n      cursor: pointer;\n      user-select: none;\n      font-size: $fontSize16;\n    }\n  }\n}\n","import { Component, h, Prop, State, Event, EventEmitter, Listen } from '@stencil/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\n@Component({\n  tag: 'il-dropdown',\n  styleUrl: 'il-dropdown.scss',\n})\nexport class IlDropdown {\n  @Prop() options: InstanceType<typeof Option>[] = [];\n  @Prop() value: string;\n  @Prop() label: string;\n  @Prop() error: string | undefined;\n  @Prop() readOnly: boolean;\n  @Prop() placeholder: string;\n  @Prop() required: Boolean;\n  @Prop() tooltip: String;\n  @Prop() isDefault: Object;\n  @State() isOpen = false;\n  @State() dropdown;\n  @Event() valueChanged: EventEmitter<string>; // Event emitted when the value changes\n\n  async componentDidLoad() {\n    if(this.isDefault && !this.value) {\n      this.handleSelect({ label: this.isDefault?.[\"answerLabel\"], value: this.isDefault?.[\"answerId\"] })\n    }\n  };\n\n  @Listen('click', { target: 'window' })\n  handleClickOutside(event: MouseEvent) {\n    if (!this.isOpen || this.dropdown.contains(event.target as Node)) {\n      return;\n    }\n    this.isOpen = false;\n  }\n\n  handleSelect(option: Option) {\n    this.valueChanged.emit(option.value);\n    this.isOpen = false;\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  renderOptions() {\n    const selectedData: any = this.options.find(option => option.value == this.value) || {};\n    if (this.isOpen) {\n      return (\n        <ul class=\"select-items\">\n          {this.options.length\n            ? this.options.map(option => (\n              <li class={`${selectedData.value == option.value ? 'selected' : 'option'}`} onClick={() => this.handleSelect(option)}>\n                {option.label}\n              </li>\n            ))\n            : null}\n        </ul>\n      );\n    }\n\n    if (!this.options.length) {\n      return (\n        <ul class=\"select-items\">\n          <li class=\"option\">No Options Found!</li>\n        </ul>\n      );\n    }\n  }\n\n  render() {\n    const selectedData = this.options.find(option => option.value == this.value);\n    return (\n      <div class=\"il-select\" ref={el => (this.dropdown = el)}>\n        <p>\n          <span class=\"label\">\n            {this.label}\n            {this.required ? <span class=\"il-required\">*</span> : null}\n          </span>\n          {this.tooltip ? <il-tooltip tooltip={this.tooltip}></il-tooltip> : null}\n        </p>\n        {\n          this.readOnly ?\n            <input\n              class=\"il-control\"\n              type='text'\n              value={ selectedData?.label || '' }\n              \n              {...this.readOnly && { disabled: true }}\n            /> :\n            <div class=\"select-trigger\" onClick={() => this.toggleDropdown()}>\n              <div class=\"selected-option\">{this.value ? selectedData?.label || this.placeholder : <span class=\"placeholder\">{this.placeholder || 'Select Option'}</span>}</div>\n              <div class=\"select-icon\">{this.isOpen ? '▲' : '▼'}</div>\n            </div>}\n        {this.renderOptions()}\n        {this.error ? <p class=\"il-error\">{this.error}</p> : null}\n      </div>\n    );\n  }\n}\n"],"version":3}