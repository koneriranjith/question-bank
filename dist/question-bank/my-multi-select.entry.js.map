{"file":"my-multi-select.entry.esm.js","mappings":"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","names":[],"sources":["src/components/my-multi-select/my-multi-select.scss?tag=my-multi-select","src/components/my-multi-select/my-multi-select.tsx"],"sourcesContent":[".il-multi-select {\n  margin-bottom: 1rem;\n  position: relative;\n  .multi-select-label {\n    margin-bottom: 10px;\n    font-size: $fontSize16;\n    font-weight: $fontWeight600;\n  }\n  .multi-select-trigger {\n    position: relative;\n    width: 100%;\n    min-height: 50px;\n    display: block;\n    padding: 0.444rem 0.75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: $ilInputColor;\n    background-color: $background-color_white;\n    background-clip: padding-box;\n    border: 1px solid $ilInputBorderColor;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: 0.375rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    .multi-select-icon {\n      position: absolute;\n      content: '';\n      top: 13px;\n      right: 13px;\n      color: $selectDropIconColor;\n      font-size: 17px;\n      vertical-align: middle;\n      display: inline-block;\n    }\n    .multi-selected-list {\n      display: inline-block;\n      font-weight: $fontWeight600;\n      min-width: 0px;\n      background-color: $navBackgroundColor;\n      border-radius: 2px;\n      box-sizing: border-box;\n      padding: 3px 6px 3px 6px;\n      font-size: $fontSize16;\n      margin: 2px;\n      .un-select-icon {\n        margin-left: 8px;\n        font-size: 13px;\n        vertical-align: middle;\n        padding: 3px 6px 3px 6px;\n      }\n      .un-select-icon:hover {\n        cursor: pointer;\n        background-color: #6d757d;\n        color: $background-color_white;\n        padding: 3px 6px 3px 6px;\n      }\n    }\n  }\n  .il-multi-dropdown {\n    background-color: $background-color_white;\n    border-radius: 0.375rem;\n    list-style: none;\n    width: 100%;\n    z-index: 99;\n    box-shadow: 0 0 40px 5px rgba(0, 0, 0, 0.1);\n    padding: 7px 0px 7px 0px;\n    overflow-y: scroll;\n    max-height: 200px;\n    border: 1px solid $ilInputBorderColor;\n    margin-top: 5px;\n    .option {\n      color: $background-color_black;\n      padding: 11px 16px;\n      cursor: pointer;\n      user-select: none;\n      font-size: $fontSize16;\n      &:hover {\n        background-color: $mainBackgroundColor;\n      }\n    }\n    .selected {\n      background-color: $appPrimaryColor;\n      color: $background-color_white;\n      padding: 11px 16px;\n      cursor: pointer;\n      user-select: none;\n      font-size: $fontSize16;\n    }\n    .multi-check-select {\n      position: relative;\n      padding-left: 35px;\n      margin-right: 22px;\n      cursor: pointer;\n      font-size: 18px;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n      .multi-check-input {\n        position: absolute;\n        opacity: 0;\n        cursor: pointer;\n        height: 0;\n        width: 0;\n        &:checked {\n          ~ {\n            .checkmark {\n              background-color: $background-color_3;\n              &:after {\n                display: block;\n              }\n            }\n          }\n        }\n      }\n      .checkmark {\n        &:after {\n          left: 7px;\n          top: 3px;\n          width: 5px;\n          height: 10px;\n          border: solid $background-color_white;\n          border-width: 0 3px 3px 0;\n          -webkit-transform: rotate(45deg);\n          -ms-transform: rotate(45deg);\n          transform: rotate(45deg);\n        }\n      }\n    }\n    .checkmark {\n      position: absolute;\n      top: 0;\n      left: 0;\n      height: 22px;\n      width: 22px;\n      border-radius: 4px;\n      background-color: $background-color_1;\n      &:after {\n        content: '';\n        position: absolute;\n        display: none;\n      }\n    }\n  }\n}\n","import { Component, h, Prop, State, Event, Listen, EventEmitter } from '@stencil/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\n@Component({\n  tag: 'my-multi-select',\n  styleUrl: 'my-multi-select.scss',\n})\nexport class MyMultiSelect {\n  @Prop() options: InstanceType<typeof Option>[] = [];\n  @Prop() label: string;\n  @Prop() error: string | undefined;\n  @Prop() values: string[] = [];\n  @Prop() required: Boolean;\n  @Prop() placeholder: string;\n  @Prop() tooltip: String;\n\n  @State() isOpen = false;\n  @State() dropdown;\n\n  @Event() valuesChanged: EventEmitter<string[]>; // Event emitted when the values change\n\n  @Listen('click', { target: 'window' })\n  handleClickOutside(event: MouseEvent) {\n    if (!this.isOpen || this.dropdown.contains(event.target as Node)) {\n      return;\n    }\n    this.isOpen = false;\n  }\n\n  toggleDropdown() {\n    this.isOpen = !this.isOpen;\n  }\n\n  handleSelect(option: Option) {\n    const selectedValues = [...this.values];\n    const index = selectedValues.indexOf(option.value);\n    if (index > -1) {\n      selectedValues.splice(index, 1);\n    } else {\n      selectedValues.push(option.value);\n    }\n    this.valuesChanged.emit(selectedValues);\n  }\n\n  render() {\n    return (\n      <div class=\"il-multi-select\" ref={el => (this.dropdown = el)}>\n        <p>\n          <span class=\"label\">\n            {this.label}\n            {this.required ? <span class=\"il-required\">*</span> : null}\n          </span>\n          {this.tooltip ? <il-tooltip tooltip={this.tooltip}></il-tooltip> : null}\n        </p>\n        <div class=\"multi-select-trigger\" onClick={() => this.toggleDropdown()}>\n          <div class=\"multi-selected-options\">\n            {this.values.length > 0 ? (\n              this.values.map(value => (\n                <div class=\"multi-selected-list\">\n                  {this.options.find(option => option.value == value)?.label}\n                  <span onClick={() => this.handleSelect(this.options.find(option => option.value == value))} class=\"un-select-icon il-close\">\n                    ✕\n                  </span>\n                </div>\n              ))\n            ) : (\n              <span class=\"placeholder\">{this.placeholder}</span>\n            )}\n          </div>\n          <div class=\"multi-select-icon\">{this.isOpen ? '▲' : '▼'}</div>\n        </div>\n        {this.isOpen && (\n          <ul class=\"il-multi-dropdown\">\n            {this.options.map(option => (\n              <li class=\"option \" onClick={() => this.handleSelect(option)}>\n                <label class=\"multi-check-select\">\n                  <input class=\"multi-check-input\" type=\"checkbox\" checked={this.values.includes(option.value)} onChange={() => {}} />\n                  {option.label}\n                  <span class=\"checkmark\"></span>\n                </label>\n              </li>\n            ))}\n          </ul>\n        )}\n        {this.error ? <p class=\"il-error\">{this.error}</p> : null}\n      </div>\n    );\n  }\n}\n"],"version":3}