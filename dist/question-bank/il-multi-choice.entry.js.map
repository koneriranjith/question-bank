{"file":"il-multi-choice.entry.esm.js","mappings":";;AAAA,MAAM,gBAAgB,GAAG,q5CAAq5C;;MCWj6C,aAAa;;;;IAYhB,oBAAe,GAAa,EAAE,CAAC;mBAXU,EAAE;;;;;;;;;EAanD,MAAM,gBAAgB;;IACpB,IAAG,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;MACxC,IAAI,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,MAAA,IAAI,CAAC,SAAS,0CAAG,aAAa,CAAC,EAAE,KAAK,EAAE,MAAA,IAAI,CAAC,SAAS,0CAAG,UAAU,CAAC,EAAE,CAAC,CAAA;KACxG;GACF;;EAED,iBAAiB;IACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;GAC5E;EACD,iBAAiB,CAAC,MAAc;IAC9B,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAClD,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;MACd,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACvC;SAAM;MACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAClC;IACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;GAC9C;EAED,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,gBAAgB,IACzB,aACE,YAAM,KAAK,EAAC,OAAO,IAChB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,GAAG,YAAM,KAAK,EAAC,aAAa,QAAS,GAAG,IAAI,CACrD,EACN,IAAI,CAAC,OAAO,GAAG,kBAAY,OAAO,EAAE,IAAI,CAAC,OAAO,GAAe,GAAG,IAAI,CACrE,EACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,KACtB,aAAO,KAAK,EAAE,eAAe,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,IAC5D,aAAO,KAAK,EAAC,kBAAkB,EAAC,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAI,EAChL,MAAM,CAAC,KAAK,EACb,YAAM,KAAK,EAAC,WAAW,GAAQ,CACzB,CACT,CAAC,EACD,IAAI,CAAC,KAAK,GAAG,SAAG,KAAK,EAAC,UAAU,IAAE,IAAI,CAAC,KAAK,CAAK,GAAG,IAAI,CACrD,EACN;GACH;;;;;;","names":[],"sources":["src/components/il-multi-choice/il-multi-choice.scss?tag=il-multi-choice","src/components/il-multi-choice/il-multi-choice.tsx"],"sourcesContent":[".il-multi-check {\n  margin-bottom: 1rem;\n  // .check-label {\n  //   margin-bottom: 10px;\n  //   font-size: $fontSize16;\n  //   font-weight: $fontWeight600;\n  //   text-transform: capitalize;\n  // }\n  .multi-check {\n    display: inline-block;\n    position: relative;\n    padding-left: 35px;\n    margin-right: 22px;\n    margin-top: 10px;\n    cursor: pointer;\n    font-size: 18px;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    &.disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n      pointer-events: none;\n    }\n    .form-check-input {\n      position: absolute;\n      opacity: 0;\n      cursor: pointer;\n      height: 0;\n      width: 0;\n      &.disabled,\n      &:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n        pointer-events: none;\n      }\n      &:checked {\n        ~ {\n          .checkmark {\n            background-color: $background-color_3;\n            &:after {\n              display: block;\n            }\n          }\n        }\n      }\n    }\n    .checkmark {\n      &:after {\n        left: 7px;\n        top: 3px;\n        width: 5px;\n        height: 10px;\n        border: solid $background-color_white;\n        border-width: 0 3px 3px 0;\n        -webkit-transform: rotate(45deg);\n        -ms-transform: rotate(45deg);\n        transform: rotate(45deg);\n      }\n    }\n  }\n  .checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 22px;\n    width: 22px;\n    border-radius: 4px;\n    background-color: $background-color_1;\n    &:after {\n      content: '';\n      position: absolute;\n      display: none;\n    }\n  }\n}\n","import { Component, h, Event, EventEmitter, Prop } from '@stencil/core';\n\ninterface Option {\n  label: string;\n  value: string;\n}\n\n@Component({\n  tag: 'il-multi-choice',\n  styleUrl: 'il-multi-choice.scss',\n})\nexport class IlMultiChoice {\n  @Prop() options: InstanceType<typeof Option>[] = [];\n  @Prop() selectedValue: any;\n  @Prop() label: string;\n  @Prop() required: Boolean;\n  @Prop() isDefault: Object;\n  @Prop() readOnly: boolean;\n  @Prop() error: string | undefined;\n  @Prop() tooltip: String;\n\n  @Event() valueChanged: EventEmitter<string[]>; // Event emitted when selection changes\n\n  private selectedOptions: string[] = [];\n\n  async componentDidLoad() {\n    if(this.isDefault && !this.selectedValue) {\n      this.handleOptionClick({ label: this.isDefault?.[\"answerLabel\"], value: this.isDefault?.[\"answerId\"] })\n    }\n  };\n\n  componentWillLoad() {\n    this.selectedOptions = this.selectedValue.length ? this.selectedValue : [];\n  }\n  handleOptionClick(option: Option) {\n    const value = option.value;\n    const index = this.selectedOptions.indexOf(value);\n    if (index > -1) {\n      this.selectedOptions.splice(index, 1);\n    } else {\n      this.selectedOptions.push(value);\n    }\n    this.valueChanged.emit(this.selectedOptions);\n  }\n\n  render() {\n    return (\n      <div class=\"il-multi-check\">\n        <p>\n          <span class=\"label\">\n            {this.label}\n            {this.required ? <span class=\"il-required\">*</span> : null}\n          </span>\n          {this.tooltip ? <il-tooltip tooltip={this.tooltip}></il-tooltip> : null}\n        </p>\n        {this.options.map(option => (\n          <label class={`multi-check ${this.readOnly ? \"disabled\" : \"\"}`} >\n            <input class=\"form-check-input\" type=\"checkbox\" disabled={this.readOnly} checked={this.selectedOptions.includes(option.value)} onChange={() => this.handleOptionClick(option)} />\n            {option.label}\n            <span class=\"checkmark\"></span>\n          </label>\n        ))}\n        {this.error ? <p class=\"il-error\">{this.error}</p> : null}\n      </div>\n    );\n  }\n}\n"],"version":3}